#!/usr/bin/env perl

use Modern::Perl;
use Test::More;
use IO::Socket::INET;

my $DEBUG = 0;
my $testrun = time . '-' . int(rand(100000));

print "Test run: $testrun\n";

# for now we'll assume M3MTA is already running
sub get_socket {
	my $sock = IO::Socket::INET->new(
		PeerPort => 'smtp(25)',
		PeerAddr => 'localhost',
		Proto	 => 'tcp',
	) or die("Can't connect: $@\n");

	return $sock;
}

sub test {
	my ($t) = @_;

	my @lines = split /\n/, $t;
	my %vars = ();
	my $sock = get_socket;
	for my $line (@lines) {
		print "Line: $line\n" if $DEBUG;
		my ($a, $b) = $line =~ /\s*([SR]): (.*)/;

		for my $var (keys %vars) {
			print "Checking for var [=$var]\n" if $DEBUG;
			my $re = qr/\[=$var\]/;
			my $value = $vars{$var};
			$b =~ s/$re/$value/g;
		}

		$b =~ s/\\r/\r/g;
		$b =~ s/\\n/\n/g;

		print "Expected data: $b\n" if $DEBUG;

		if($a eq 'S') {
			print "Sending data: $b\n" if $DEBUG;
			print $sock "$b\r\n";
		} elsif ($a eq 'R') {
			print "Reading data...\n" if $DEBUG;
			my $data = <$sock>;
			while(my ($var, $re) = $b =~ /\[(\w+):"(.*)"\]/) {
				print "Var: $var\n" if $DEBUG;
				$b =~ s/\[(\w+):"(.*)"\]/($re)/;
				my $c = qr/$b/;
				my ($value) = $data =~ $c;
				$vars{$var} = $value;
				print "Got value: $value\n" if $DEBUG;
			}
			print "Reading data: $data\n" if $DEBUG;
			my $re = qr/$b/;
			ok($data =~ $re, 'Data matches expected: ' . $b);
		}
	}
	ok(1, 'Test finished');
}

my $message = "To: <postmaster\@[=host]>\\r\\nMessage-Id: test\@[=host]\\r\\nSubject: Automated test message (run $testrun)\\r\\nFrom: Automated Test <automated\@m3.mta>\\r\\nDate: Tue 01 Jan 2013 00:00:00 +0000\\r\\n\\r\\nMessage generated by automated test suite.\\r\\n\\r\\n.\\r\\n";

# Regex capture: [key:"regex"], e.g.
#     [host:"[^\\s]+"]
# captures anything matching [^\s]+ into a variable named 'host'

# Variable substitution: [=key], e.g.
#	  [=host]
# inserts the value captured in the earlier 'host' regex

my @tests = (
	<<EOF
		Successful message delivery
		R: 220 [host:"[^\\s]+"] M3MTA
		S: HELO localhost
		R: 250 Hello 'localhost'. I'm M3MTA
		S: MAIL FROM:<>
		R: 250  sender ok
		S: RCPT TO:<postmaster@[=host]>
		R: 250 postmaster@[=host] recipient ok
		S: DATA
		R: 354 Send mail, end with "." on line by itself
		S: $message
		R: 250 [id:"[^\@]+@[=host]"] message accepted for delivery
		S: QUIT
		R: 221 Bye.
EOF
	, <<EOF
		Quit after connection
		R: 220 [host:"[^\\s]+"] M3MTA
		S: QUIT
		R: 221 Bye.
EOF
);

for my $test (@tests) {
	my ($name) = $test =~ /^\s*([^\r\n]*)/;
	print "Test: $name\n";
	$test =~ s/^\s*[^\r\n]*\s*[\r\n]?//;
	test($test);
}

done_testing();